import tkinter as tk
import time
import threading

class TrafficLightSimulation:
    def __init__(self, master):
        self.master = master
        self.master.title("–°–∏–º—É–ª—è—Ü–∏—è —Å–≤–µ—Ç–æ—Ñ–æ—Ä–∞")

        self.green_duration = tk.IntVar(value=5)
        self.yellow_duration = tk.IntVar(value=2)
        self.red_duration = tk.IntVar(value=5)
        self.car_count = tk.IntVar(value=0)

        self.running = False

        self.create_widgets()

        self.canvas = tk.Canvas(master, width=400, height=200, bg="white")
        self.canvas.pack(pady=20)

    def create_widgets(self):
        tk.Label(self.master, text="–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–µ–ª–µ–Ω–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞ (—Å):").pack()
        tk.Spinbox(self.master, from_=1, to=60, textvariable=self.green_duration).pack()

        tk.Label(self.master, text="–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∂–µ–ª—Ç–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞ (—Å):").pack()
        tk.Spinbox(self.master, from_=1, to=60, textvariable=self.yellow_duration).pack()

        tk.Label(self.master, text="–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫—Ä–∞—Å–Ω–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞ (—Å):").pack()
        tk.Spinbox(self.master, from_=1, to=60, textvariable=self.red_duration).pack()

        tk.Label(self.master, text="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –Ω–∞ –ø–µ—Ä–µ–∫—Ä–µ—Å—Ç–∫–µ:").pack()
        tk.Scale(self.master, from_=0, to=20, orient=tk.HORIZONTAL, variable=self.car_count).pack()

        tk.Button(self.master, text="–ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–Ω–∏–º–∞—Ü–∏—é", command=self.start_animation).pack()
        tk.Button(self.master, text="–°–±—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã", command=self.reset_parameters).pack()

        self.light_label = tk.Label(self.master, text="", font=("Helvetica", 48))
        self.light_label.pack()

    def start_animation(self):
        if not self.running:
            self.running = True
            threading.Thread(target=self.run_traffic_light).start()

    def reset_parameters(self):
        self.running = False
        self.canvas.delete("all")
        self.light_label.config(text="")

    def run_traffic_light(self):
        while self.running:
            self.light_label.config(text="üü¢")
            self.move_cars()
            time.sleep(self.green_duration.get())

            self.light_label.config(text="üü°")
            time.sleep(self.yellow_duration.get())

            self.light_label.config(text="üî¥")
            self.stop_cars()
            time.sleep(self.red_duration.get())

    def move_cars(self):
        car_width = 20
        car_height = 10

        for i in range(self.car_count.get()):
            x_start = 0
            y_position = 50 + i * 15

            car = self.canvas.create_rectangle(x_start, y_position,
                                               x_start + car_width,
                                               y_position + car_height,
                                               fill="blue")

            for x in range(0, 400 - car_width + 1, 5):
                if not self.running:
                    return

                if self.light_label.cget("text") == "üü¢":
                    self.canvas.move(car, 5, 0)

                time.sleep(0.05)

    def stop_cars(self):
        self.canvas.delete("all")

if __name__ == "__main__":
    root = tk.Tk()
    app = TrafficLightSimulation(root)
    root.mainloop()
